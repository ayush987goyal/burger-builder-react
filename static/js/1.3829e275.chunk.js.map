{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","shared/utility.js","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Input","Label","label","module","exports","updateObject","oldObject","updatedProps","_mnt_mydata_tempDev_react_new_burger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","CheckoutSummary","ContactData","checkoutSummary","react_default","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","withErrorHandler","ings","useStore","state","burgerBuilder","price","totalPrice","loading","order","token","auth","userId","onOrderBurger","useAction","actions","purchaseBurger","_useState","useState","orderForm","name","type","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","formIsValid","_useState2","slicedToArray","setState","formElementsArray","id","config","form","onSubmit","event","preventDefault","formData","formElementIdentifier","orderData","formElement","inputIdentifier","updatedFormElement","target","updatedOrderForm","defineProperty","objectSpread","inputChangedHandler","disabled","Spinner","axios","Checkout","purchased","summary","Redirect","to","purchasedRedirect","history","goBack","replace","Route","path","match","component"],"mappings":"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","file":"static/js/1.3829e275.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case('input'):\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case('textarea'):\r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case('select'):\r\n            inputElement = (\r\n                <select \r\n                    className={inputClasses.join(' ')} \r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3rlVF\",\"Label\":\"Input_Label__Wm2G6\",\"InputElement\":\"Input_InputElement__Dmwji\",\"Invalid\":\"Input_Invalid__4sDgV\"};","export const updateObject = (oldObject, updatedProps) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProps\r\n    };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n    \r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1-lYj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2RgxD\"};","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default checkoutSummary;","import React, { useState } from 'react';\r\nimport { useStore, useAction } from 'easy-peasy';\r\nimport axios from '../../../axios-orders';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from './../../../hoc/withErrorHandler/withErrorHandler';\r\nimport { updateObject, checkValidity } from '../../../shared/utility';\r\n\r\nconst ContactData = props => {\r\n  const ings = useStore(state => state.burgerBuilder.ingredients);\r\n  const price = useStore(state => state.burgerBuilder.totalPrice);\r\n  const loading = useStore(state => state.order.loading);\r\n  const token = useStore(state => state.auth.token);\r\n  const userId = useStore(state => state.auth.userId);\r\n\r\n  const onOrderBurger = useAction(actions => actions.order.purchaseBurger);\r\n\r\n  const [state, setState] = useState({\r\n    orderForm: {\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Your Name'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      street: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Street'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      zipCode: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'ZIP Code'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      country: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Country'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'email',\r\n          placeholder: 'Your E-Mail'\r\n        },\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: 'select',\r\n        elementConfig: {\r\n          options: [\r\n            { value: 'fastest', displayValue: 'Fastest' },\r\n            { value: 'cheapest', displayValue: 'Cheapest' }\r\n          ]\r\n        },\r\n        value: 'fastest',\r\n        validation: {},\r\n        valid: true\r\n      }\r\n    },\r\n    formIsValid: false\r\n  });\r\n\r\n  const orderHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const formData = {};\r\n    for (let formElementIdentifier in state.orderForm) {\r\n      formData[formElementIdentifier] = state.orderForm[formElementIdentifier].value;\r\n    }\r\n    const order = {\r\n      ingredients: ings,\r\n      price: price,\r\n      orderData: formData,\r\n      userId: userId\r\n    };\r\n\r\n    onOrderBurger({ orderData: order, token });\r\n  };\r\n\r\n  const inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedFormElement = updateObject(state.orderForm[inputIdentifier], {\r\n      value: event.target.value,\r\n      valid: checkValidity(event.target.value, state.orderForm[inputIdentifier].validation),\r\n      touched: true\r\n    });\r\n\r\n    const updatedOrderForm = updateObject(state.orderForm, {\r\n      [inputIdentifier]: updatedFormElement\r\n    });\r\n\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n\r\n    setState({ ...state, orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n  };\r\n\r\n  const formElementsArray = [];\r\n  for (let key in state.orderForm) {\r\n    formElementsArray.push({\r\n      id: key,\r\n      config: state.orderForm[key]\r\n    });\r\n  }\r\n\r\n  let form = (\r\n    <form onSubmit={orderHandler}>\r\n      {formElementsArray.map(formElement => (\r\n        <Input\r\n          key={formElement.id}\r\n          elementType={formElement.config.elementType}\r\n          elementConfig={formElement.config.elementConfig}\r\n          value={formElement.config.value}\r\n          invalid={!formElement.config.valid}\r\n          shouldValidate={formElement.config.validation}\r\n          touched={formElement.config.touched}\r\n          changed={event => inputChangedHandler(event, formElement.id)}\r\n        />\r\n      ))}\r\n      <Button btnType=\"Success\" disabled={!state.formIsValid}>\r\n        ORDER\r\n      </Button>\r\n    </form>\r\n  );\r\n  if (loading) {\r\n    form = <Spinner />;\r\n  }\r\n  return (\r\n    <div className={classes.ContactData}>\r\n      <h4>Enter your Contact Data</h4>\r\n      {form}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorHandler(ContactData, axios);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useStore } from 'easy-peasy';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from '../../containers/Checkout/ContactData/ContactData';\r\n\r\nconst Checkout = props => {\r\n  const ings = useStore(state => state.burgerBuilder.ingredients);\r\n  const purchased = useStore(state => state.order.purchased);\r\n\r\n  const checkoutCancelledHandler = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const checkoutContinuedHandler = () => {\r\n    props.history.replace('/checkout/contact-data');\r\n  };\r\n\r\n  let summary = <Redirect to=\"/\" />;\r\n  if (ings) {\r\n    const purchasedRedirect = purchased ? <Redirect to=\"/\" /> : null;\r\n    summary = (\r\n      <div>\r\n        {purchasedRedirect}\r\n        <CheckoutSummary\r\n          ingredients={ings}\r\n          checkoutCancelled={checkoutCancelledHandler}\r\n          checkoutContinued={checkoutContinuedHandler}\r\n        />\r\n        <Route path={props.match.path + '/contact-data'} component={ContactData} />\r\n      </div>\r\n    );\r\n  }\r\n  return summary;\r\n};\r\n\r\nexport default Checkout;\r\n"],"sourceRoot":""}